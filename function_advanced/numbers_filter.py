def even_odd_filter (**kwargs):

    if "even" in kwargs:
        kwargs["even"] = list(filter(lambda x: x % 2 == 0, kwargs["even"]))
    if "odd" in kwargs:
        kwargs["odd"] = list(filter(lambda x: x % 2 == 1, kwargs["odd"]))

    sorted_kwargs = dict(sorted(kwargs.items(), key = lambda x: -len(x[1])))

    return sorted_kwargs

# подавам куаргс, т.е те са ми речник
# проверявам дали имам ключ четен/нечетен в речника
# на всеки ключ филтрирам със функиця филтър - подавам ламбда да се филтрира по четно/нечетно и велюто, което стои срещу ключа
#  тъй като срещу всеки ключ стои лист със стойности
#  филтрирането по ламбда ми дава само тези, които са ми необходими четни/нечетни
# филтъра го правя на лист , за да не става като обект
# след като съм изфилтрирала сортирам речника
# подавам айтъмите на речника и ключа е ламбда - по дължината на велюто
#  за да мога да напрява печата го правя във речник и връщам сортирания речник



print(even_odd_filter(
    odd=[1, 2, 3, 4, 10, 5],
    even=[3, 4, 5, 7, 10, 2, 5, 5, 2],
))

print(even_odd_filter(
    odd=[2, 2, 30, 44, 10, 5],
))
